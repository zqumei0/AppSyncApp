type FlightReservation {
  reservationId: ID!
  flightInformation: FlightInformation
}

type FlightInformation {
  passengerName: String!
  flightNumber: Int!
  departureDate: String
  departureTime: String
  arrivalDate: String
  arrivalTime: String
  origin: String
  destination: String
  seatNumber: String
}

type Query {
  getFlightReservation(reservationId: ID!): FlightReservation
}

input NewFlightReservation {
  reservationId: ID!
  newFlightInformation: NewFlightInformation
}

input NewFlightInformation {
  passengerName: String!
  flightNumber: Int!
  departureDate: String
  departureTime: String
  arrivalDate: String
  arrivalTime: String
  origin: String
  destination: String
  seatNumber: String
}

type Mutation {
  createFlightReservation(newFlightReservation: NewFlightReservation!): FlightReservation!
  modifyFlightReservation(reservationId: ID!, newFlightInformation: NewFlightInformation!): FlightReservation!
  deleteFlightReservation(reservationId: ID!): FlightReservation
  generateFlightManifest(message: String!) : String
}
